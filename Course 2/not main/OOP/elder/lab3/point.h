class tpoint { // класс точки
      private: // личное
       int x,y,dx,dy; // координаты и направление движения
       int color;  // цвет
       int width, height; // ширина и высота поля
       int tmove; // тип движения
      public: // публичное
       tpoint(int, int); // конструктор
       void move(); // метод движения
};
tpoint::tpoint(int w, int h) { // коструктор для точек, поступает на вход высота и ширина поля
     width=w; // запоминаем их
     height=h;     
     y=rand()%height; // задаем случайные координаты в пределах поля
     x=rand()%width;     
     dx=rand()%3-1; // задаем направление движения
     dy=rand()%3-1;
     while ((dx==0)&(dy==0)) dy=rand()%3-1;;// пока наравление движения точки не определено определяем движение по игреку хотя бы
     color=COLOR(rand()%256,rand()%256,rand()%256); // случайный цвет
     tmove=rand()%2; // один из двух типов движения
}
void tpoint::move() { // метод движения точки
     if (tmove==1) { // если первый тип двидения
        dx+=rand()%3-1; // изменяем на случайное число смещение по иксу
        if (dx<-1) dx=-1; // если ушло за рамки в минус, ограничиваем
        if (dx>1) dx=1; // если в плюс - тоже
        dy+=rand()%3-1; // аналогично по игреку
        if (dy<-1) dy=-1;
        if (dy>1) dy=1;                
     }
     setcolor(0); // выбираем черный цвет
     rectangle(x,y,x+2,y+2); // закрашиваем старую точку (в роли точки выступает прямоугольник 3на3, чтобы лучше было видно)
     if (x+dx>width) dx=-dx; // если точка после движения уйдет за правый край поля, поворачиваем ее влево
     if (x+dx<0) dx=-dx; // если уйдет влево - поворачиваем вправо
     if (y+dy>height) dy=-dy; // если вниз - вверх
     if (y+dy<0) dy=-dy; // вверх - вниз
     x+=dx; // передвигаем коорддинаты на заданное смещение
     y+=dy; 
     setcolor(color); //устанавливаем цвет
     rectangle(x,y,x+2,y+2); //рисуем
}

